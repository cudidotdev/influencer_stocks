/**
* This file was automatically generated by @cosmwasm/ts-codegen@1.12.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export interface InstantiateMsg {}
export type ExecuteMsg = {
  create_stock: {
    ticker: string;
  };
} | {
  start_auction: {
    stock_id: number;
  };
} | {
  end_auction: {
    stock_id: number;
  };
} | {
  place_bid: {
    price_per_share: number;
    shares: number;
    stock_id: number;
  };
};
export type QueryMsg = {
  get_stock_by_id: {
    stock_id: number;
  };
} | {
  get_all_stocks: {
    limit?: number | null;
    start_after?: number | null;
  };
} | {
  get_stocks_by_influencer: {
    influencer: Addr;
    limit?: number | null;
    start_after?: number | null;
  };
} | {
  get_active_auctions: {
    limit?: number | null;
    start_after?: number | null;
  };
} | {
  get_expired_active_auctions: {
    limit?: number | null;
    start_after?: number | null;
  };
} | {
  get_bids_by_bidder: {
    bidder: Addr;
    is_active?: boolean | null;
    is_open?: boolean | null;
    stock_id?: number | null;
  };
} | {
  get_open_bids_by_stock: {
    stock_id: number;
  };
} | {
  get_bids_by_stock: {
    stock_id: number;
  };
} | {
  get_bid_by_id: {
    bid_id: number;
  };
} | {
  get_minimum_bid_price: {
    shares_requested: number;
    stock_id: number;
  };
} | {
  get_shares_by_stock: {
    stock_id: number;
  };
} | {
  get_shares_by_owner: {
    owner: Addr;
  };
} | {
  get_share_by_id: {
    share_id: number;
  };
};
export type Addr = string;
export interface GetStocksResponse {
  stocks: Stock[];
}
export interface Stock {
  auction_active: number;
  auction_end?: number | null;
  auction_start?: number | null;
  created_at: number;
  id: number;
  influencer: Addr;
  ticker: string;
  total_shares: number;
}
export interface GetBidByIdResponse {
  bid: Bid;
}
export interface Bid {
  active: boolean;
  bidder: Addr;
  created_at: number;
  id: number;
  open: number;
  price_per_share: number;
  remaining_shares: number;
  shares_requested: number;
  stock_id: number;
}
export interface GetBidsResponse {
  bids: Bid[];
}
export interface GetMinimumBidPriceResponse {
  min_price: string;
  shares_requested: number;
}
export interface GetShareByIdResponse {
  share: Share;
}
export interface Share {
  id: number;
  no_of_shares: number;
  owner: Addr;
  stock_id: number;
}
export interface GetSharesResponse {
  shares: Share[];
}
export interface GetStockByIdResponse {
  stock: Stock;
}